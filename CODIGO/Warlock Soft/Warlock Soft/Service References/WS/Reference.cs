//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Warlock_Soft.WS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://WS_Warlock_Soft/", ConfigurationName="WS.WS_servicio")]
    public interface WS_servicio {
        
        // CODEGEN: El parámetro 'return' requiere información adicional de esquema que no se puede capturar con el modo de parámetros. El atributo específico es 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://WS_Warlock_Soft/WS_servicio/loginRequest", ReplyAction="http://WS_Warlock_Soft/WS_servicio/loginResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        Warlock_Soft.WS.loginResponse login(Warlock_Soft.WS.loginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://WS_Warlock_Soft/WS_servicio/loginRequest", ReplyAction="http://WS_Warlock_Soft/WS_servicio/loginResponse")]
        System.Threading.Tasks.Task<Warlock_Soft.WS.loginResponse> loginAsync(Warlock_Soft.WS.loginRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="login", WrapperNamespace="http://WS_Warlock_Soft/", IsWrapped=true)]
    public partial class loginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS_Warlock_Soft/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string nickname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS_Warlock_Soft/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string pasword;
        
        public loginRequest() {
        }
        
        public loginRequest(string nickname, string pasword) {
            this.nickname = nickname;
            this.pasword = pasword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="loginResponse", WrapperNamespace="http://WS_Warlock_Soft/", IsWrapped=true)]
    public partial class loginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://WS_Warlock_Soft/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] @return;
        
        public loginResponse() {
        }
        
        public loginResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WS_servicioChannel : Warlock_Soft.WS.WS_servicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WS_servicioClient : System.ServiceModel.ClientBase<Warlock_Soft.WS.WS_servicio>, Warlock_Soft.WS.WS_servicio {
        
        public WS_servicioClient() {
        }
        
        public WS_servicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WS_servicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_servicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WS_servicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Warlock_Soft.WS.loginResponse Warlock_Soft.WS.WS_servicio.login(Warlock_Soft.WS.loginRequest request) {
            return base.Channel.login(request);
        }
        
        public string[] login(string nickname, string pasword) {
            Warlock_Soft.WS.loginRequest inValue = new Warlock_Soft.WS.loginRequest();
            inValue.nickname = nickname;
            inValue.pasword = pasword;
            Warlock_Soft.WS.loginResponse retVal = ((Warlock_Soft.WS.WS_servicio)(this)).login(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Warlock_Soft.WS.loginResponse> Warlock_Soft.WS.WS_servicio.loginAsync(Warlock_Soft.WS.loginRequest request) {
            return base.Channel.loginAsync(request);
        }
        
        public System.Threading.Tasks.Task<Warlock_Soft.WS.loginResponse> loginAsync(string nickname, string pasword) {
            Warlock_Soft.WS.loginRequest inValue = new Warlock_Soft.WS.loginRequest();
            inValue.nickname = nickname;
            inValue.pasword = pasword;
            return ((Warlock_Soft.WS.WS_servicio)(this)).loginAsync(inValue);
        }
    }
}
